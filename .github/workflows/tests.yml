name: Python tests

on:
  push:
    branches: [ $default-branch ]
  pull_request:
    branches: [ $default-branch ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8"]

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: postgres_db
          POSTGRES_PASSWORD: postgres_password
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres_user
        ports:
          - 5432:5432
        # set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install PostgreSQL client   
      run: |
        apt-get update
        apt-get install --yes postgresql-client

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e ".[dev]"
        python setup.py develop
        cp server.ini.tpl server.ini

    - name: Install database
      run: |
        psql -h postgres -d postgres_db -U postgres_user -c  'CREATE DATABASE rolling_test;' -U postgres
        psql -h postgres -d postgres_db -U postgres_user -c  "CREATE USER rolling WITH PASSWORD 'rolling';" -U postgres
        psql -h postgres -d postgres_db -U postgres_user -c  'GRANT ALL PRIVILEGES ON DATABASE rolling_test TO rolling;' -U postgres
      env:
        PGPASSWORD: postgres_password

    - name: Tests
      run: |
        pytest tests --disable-pytest-warnings -vvvvv
